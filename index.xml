<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hln</title>
    <link>https://hln.github.io/</link>
    <description>Recent content on hln</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Sep 2021 22:29:52 -0400</lastBuildDate><atom:link href="https://hln.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction to Type Classes in Scala</title>
      <link>https://hln.github.io/posts/intro-type-classes/</link>
      <pubDate>Mon, 20 Sep 2021 22:29:52 -0400</pubDate>
      
      <guid>https://hln.github.io/posts/intro-type-classes/</guid>
      <description>Introduction A quick Google search of type class may yield the following (arguably vague / abstract) phrases or definitions:
  Retroactive extension or retroactive / ad-hoc polymorphism
  Decoupling type definition from associated type methods
  In this post, I hope to distill these ideas a bit and provide a soft introduction to type classes and how they&amp;rsquo;re defined and used in Scala.
Definition In short, type classes are a way associating desired functionality to some type; these types may be native Scala types (e.</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://hln.github.io/posts/my-first-post/</link>
      <pubDate>Thu, 22 Jul 2021 20:38:00 -0400</pubDate>
      
      <guid>https://hln.github.io/posts/my-first-post/</guid>
      <description>Hello and Welcome! I&amp;rsquo;m Hoang and this is where you&amp;rsquo;ll find a collection of all my blog posts ranging from technical pieces on some subject that piqued my interest that day to seemingly random streams of conscisouness on some controversial subject and from my experiences in the software industry to my experiences as a millenial who grew up with working-class, refugees as parents who fled communist Vietnam. My goal with this blog is two-fold:</description>
    </item>
    
  </channel>
</rss>
